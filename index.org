#+title: Imperative & Object-Oriented Programming Methodology
#+include: "./setup.org"

#+begin_note
Get course material at the [[https://github.com/IOOPM-UU/ioopm18/][course's GitHub page]] \\
Ask questions and discuss with other students on [[https://piazza.com/class/jkd32onglxi2vb][Piazza]]  \\
Request demonstrations and track your progress at the [[http://auportal.herokuapp.com/][AU Portal]]
#+end_note

* How IOOPM Works
If you are visiting this page for the first time, you should
probably [[file:about.org][read the page about the course first]]. *Mandatory reading!*

* Lecture Schedule with Slides
Note that without exception, all lectures start at 10:15 and are scheduled to end at 12:00.
The [[https://cloud.timeedit.net/uu/web/schema/ri1875ZQ0QYZ01Q0wo7YwcQ25y6QZ6XfYxZ020g.html][full schedule]] is available on TimeEdit.
** Phase 1 (Imperative Programming)
| Date  | Contents                                                                                                                                                               | Achivements                   | fab:slideshare |
|-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------+------------------|
| 3/9   | Grundläggande datatyper (inkl. arrayer), deklaration, uttryck och satser (inkl. loopar). Funktioner. Introduktion till standard-I/O och grundläggande stränghantering. | [[http://auportal.herokuapp.com/achievements/1][A1]] ([[http://auportal.herokuapp.com/achievements/13][F13]], [[http://auportal.herokuapp.com/achievements/15][G15]])                 | TBA              |
| 6/9   | Poster och unioner. Typnamnsdefinitioner. Funktionspekare. Separatkompilering och headerfiler.                                                                         | [[http://auportal.herokuapp.com/achievements/3][A3]], [[http://auportal.herokuapp.com/achievements/9][D9]], [[http://auportal.herokuapp.com/achievements/15][G15]], [[http://auportal.herokuapp.com/achievements/16][G16]], ([[http://auportal.herokuapp.com/achievements/22][I22]]), [[http://auportal.herokuapp.com/achievements/30][K30]]. | TBA              |
| 10/9  | Introduktion till resten av kursen. Skillnad mellan funktionell och imperativ programmering. SIMPLE. Det agila upplägget.                                              | [[http://auportal.herokuapp.com/achievements/7][C7]]                            | TBA              |
| 13/9  | Dynamisk minnesallokering. Pekare.                                                                                                                                     | [[http://auportal.herokuapp.com/achievements/10][E10]], [[http://auportal.herokuapp.com/achievements/20][H20]], [[http://auportal.herokuapp.com/achievements/26][J26]], [[http://auportal.herokuapp.com/achievements/27][J27]], [[http://auportal.herokuapp.com/achievements/38][M38]]       | TBA              |
| 17/9  | Hur strukturerar man? Top-down, bottom-up. Lagertänkande.                                                                                                              | [[http://auportal.herokuapp.com/achievements/41][N41]], [[http://auportal.herokuapp.com/achievements/45][P45]]                      | TBA              |
| 19/9  | Automatisering (Make, scripting).                                                                                                                                      | [[http://auportal.herokuapp.com/achievements/55][T55]], [[http://auportal.herokuapp.com/achievements/57][U57]], [[http://auportal.herokuapp.com/achievements/58][V58]]                 | TBA              |
| 24/9  | Introduction to testing with CUnit                                                                                                                                     | [[http://auportal.herokuapp.com/achievements/18][G18]], [[http://auportal.herokuapp.com/achievements/49][Q49]], [[http://auportal.herokuapp.com/achievements/50][Q50]]                 | TBA              |
| 27/9  | Recap: Pekare, arrayer. Dynamiska arrayer. Pekararrayer.                                                                                                               | [[http://auportal.herokuapp.com/achievements/10][E10]], [[http://auportal.herokuapp.com/achievements/20][H20]], [[http://auportal.herokuapp.com/achievements/26][J26]], [[http://auportal.herokuapp.com/achievements/36][M36]]            | TBA              |
| 1/10  | Länkade strukturer och iteratorer.                                                                                                                                     | [[http://auportal.herokuapp.com/achievements/27][J27]], [[http://auportal.herokuapp.com/achievements/37][M37]], [[http://auportal.herokuapp.com/achievements/39][M39]]                 | TBA              |
| 4/10  | Const, Preprocessorn, Coupling & Cohesion                                                                                                                              | TBA                           | TBA              |
| 8/10  | Defensiv programmering. Läsbar kod.                                                                                                                                    | [[http://auportal.herokuapp.com/achievements/22][I22]], [[http://auportal.herokuapp.com/achievements/45][P45]]                      | TBA              |
| 11/10 | Preprocessorn. Bitmanipulering. Optimering.                                                                                                                            | [[http://auportal.herokuapp.com/achievements/42][O42]], [[http://auportal.herokuapp.com/achievements/43][O43]], [[http://auportal.herokuapp.com/achievements/44][O44]]                 | TBA              |
| 15/10 | /Backup/                                                                                                                                                               |                               | TBA              |
| 18/10 | Prepping for code exam                                                                                                                                                 |                               | TBA              |
** Phase 2 (Object-Oriented Programming)
| Date  | Contents                                                                                      | Achivements                                                | fab:slideshare |
|-------+-----------------------------------------------------------------------------------------------+------------------------------------------------------------+------------------|
| 25/10 | Introduktion till objektorientering.                                                          | TBA                                                        | TBA              |
| 26/19 | Översikt: skräpsamling, undantagshantering, JVM:en, JIT-kompilering.                          | TBA                                                        | TBA              |
| 29/10 | Ett första objektorienterat program                                                           | [[http://auportal.herokuapp.com/achievements/2][A2]], [[http://auportal.herokuapp.com/achievements/37][M37]], [[http://auportal.herokuapp.com/achievements/40][N40]]                                               | TBA              |
| 1/11  | Objektorienterad analys och design. Konstruktorer. Instantiering, referenser, klassvariabler. | [[http://auportal.herokuapp.com/achievements/2][A2]], [[http://auportal.herokuapp.com/achievements/4][B4]], [[http://auportal.herokuapp.com/achievements/5][B5]], [[http://auportal.herokuapp.com/achievements/6][B6]], [[http://auportal.herokuapp.com/achievements/8][C8]], [[http://auportal.herokuapp.com/achievements/19][H19]], [[http://auportal.herokuapp.com/achievements/20][H20]], [[http://auportal.herokuapp.com/achievements/21][H21]], [[http://auportal.herokuapp.com/achievements/11][E11]], [[http://auportal.herokuapp.com/achievements/12][E12]], [[http://auportal.herokuapp.com/achievements/30][K30]], [[http://auportal.herokuapp.com/achievements/31][K31]], [[http://auportal.herokuapp.com/achievements/32][K32]] | TBA              |
| 5/11  | Arv och klasshierarkier. Överlagring. Overriding.                                             | [[http://auportal.herokuapp.com/achievements/2][A2]], [[http://auportal.herokuapp.com/achievements/4][B4]], [[http://auportal.herokuapp.com/achievements/5][B5]], [[http://auportal.herokuapp.com/achievements/6][B6]], [[http://auportal.herokuapp.com/achievements/8][C8]], [[http://auportal.herokuapp.com/achievements/19][H19]], [[http://auportal.herokuapp.com/achievements/20][H20]], [[http://auportal.herokuapp.com/achievements/21][H21]], [[http://auportal.herokuapp.com/achievements/11][E11]], [[http://auportal.herokuapp.com/achievements/12][E12]], [[http://auportal.herokuapp.com/achievements/30][K30]], [[http://auportal.herokuapp.com/achievements/31][K31]], [[http://auportal.herokuapp.com/achievements/32][K32]] | TBA              |
| 8/11  | Överlagring av konstruktorer. Abstrakta klasser. Interface. Genericitet.                      | [[http://auportal.herokuapp.com/achievements/2][A2]], [[http://auportal.herokuapp.com/achievements/4][B4]], [[http://auportal.herokuapp.com/achievements/5][B5]], [[http://auportal.herokuapp.com/achievements/6][B6]], [[http://auportal.herokuapp.com/achievements/8][C8]], [[http://auportal.herokuapp.com/achievements/19][H19]], [[http://auportal.herokuapp.com/achievements/20][H20]], [[http://auportal.herokuapp.com/achievements/21][H21]], [[http://auportal.herokuapp.com/achievements/11][E11]], [[http://auportal.herokuapp.com/achievements/12][E12]], [[http://auportal.herokuapp.com/achievements/30][K30]], [[http://auportal.herokuapp.com/achievements/31][K31]], [[http://auportal.herokuapp.com/achievements/32][K32]] | TBA              |
| 12/11 | Identitet och ekvivalens. Inkapsling. Inre och nästlade klasser. Wrapperklasser.              | [[http://auportal.herokuapp.com/achievements/2][A2]], [[http://auportal.herokuapp.com/achievements/15][G15]], [[http://auportal.herokuapp.com/achievements/16][G16]], [[http://auportal.herokuapp.com/achievements/17][G17]]                                          | TBA              |
| 15/11 | Testing of Object-Oriented Programs                                                           | [[http://auportal.herokuapp.com/achievements/18][G18]], [[http://auportal.herokuapp.com/achievements/46][P46]], [[http://auportal.herokuapp.com/achievements/49][Q49]], [[http://auportal.herokuapp.com/achievements/50][Q50]], [[http://auportal.herokuapp.com/achievements/51][Q51]]                                    | TBA              |
| 19/11 | Statisk vs. dynamisk bindning. Profilering. Refactoring. JIT-kompilering. Bytecode.           | [[http://auportal.herokuapp.com/achievements/40][N40]], [[http://auportal.herokuapp.com/achievements/41][N41]], [[http://auportal.herokuapp.com/achievements/42][O42]], [[http://auportal.herokuapp.com/achievements/43][O43]], [[http://auportal.herokuapp.com/achievements/44][O44]]                                    | TBA              |
| 22/11 | Garbage collection in-depth, and its relation to resource management.                         | TBA                                                        | TBA              |
| 26/11 | /Backup/                                                                                      |                                                            | TBA              |
| 29/11 | /Backup/                                                                                      |                                                            | TBA              |
| 3/12  | Prepping for code exam                                                                        |                                                            | TBA              |

TBA in 2018: Guest lecture from Oracle JVM engineers.
** Phase 3 (Methodology and Tools)
| Date  | Contents                                 | Achievements | fab:slideshare |
|-------+------------------------------------------+--------------+------------------|
| 10/12 | Project presentations, software projects | TBA          | TBA              |
| 18/1  | Retrospective & guest lecture            | TBA          | TBA              |

* Deadlines
Deadlines and important dates in chronological order. Read [[file:about.org#orgc68375c][here]] about soft and hard deadlines.

| Date         | Deadline                   | Comment                                   |
|--------------+----------------------------+-------------------------------------------|
| 14/9         | [[http://auportal.herokuapp.com/achievements/63][Groupie Achievement]]        | Only one hand-in *per group*              |
| 14/9         | [[file:assignments/c-bootstrap.org][C Bootstrap]]                | Prerequisite for starting on Assignment 1 |
| 5/10         | [[file:assignments/assignment1.org][Assignment 1]] (Soft)        |                                           |
| 19/10        | [[file:assignments/assignment1.org][Assignment 1]] (Hard)        |                                           |
| 19/10        | [[file:assignments/assignment2.org][Assignment 2]] (Soft)        |                                           |
| 24/10        | [[file:code-exam.org][Coding Exam]] 1              |                                           |
| 26/10        | [[file:assignments/assignment2.org][Assignment 2]] (Hard)        |                                           |
| 26/10        | [[file:assignments/java-bootstrap.org][Java Bootstrap]]             | Prerequisite for starting on Assignment 2 |
| 16/11        | [[file:assignments/assignment3.org][Assignment 3]] (Soft)        |                                           |
| 30/11        | [[file:assignments/assignment3.org][Assignment 3]] (Hard)        |                                           |
| 30/11        | [[file:assignments/assignment4.org][Assignment 4]] (Soft)        |                                           |
| 1/12         | Last day to hand in [[http://auportal.herokuapp.com/achievements/59][essay]]  | Essay is *not mandatory*                  |
| 11/12        | [[file:assignments/assignment4.org][Assignment 4]] (Hard)        |                                           |
| 11/12        | [[file:code-exam.org][Coding Exam]] 2              |                                           |
| 13/12        | Last possibility to do [[http://auportal.herokuapp.com/achievements/62][X62]] | This is a *not mandatory* achievement     |
| 19/12        | [[file:code-exam.org][Coding Exam]] 3              |                                           |
| December     | Essay feedback seminars    | *Mandatory presence for essay writers*    |
| 14/1 2019    | [[file:projects/projects.org][Project]] (Hard)             |                                           |
| 16/1 2019    | [[http://auportal.herokuapp.com/achievements/7][C7]] deadline                |                                           |
| 16-18/1 2019 | [[file:projects/projects.org][Project]] Seminars           | *Mandatory presence for all*              |

* Exercises, Assignments and Projects
Note that assignments mostly act as drivers to learn concepts and produce evidence for demonstrating mastery of achivements.

| What                          | Start | End       |
|-------------------------------+-------+-----------|
| [[file:assignments/c-bootstrap.org][C bootstrap exercises]]         | 3/9   | 14/9      |
| [[file:assignments/assignment1.org][Assignment 1 (C)]]              | 17/9  | 5/10      |
| [[file:assignments/assignment2.org][Assignment 2 (C)]]              | 8/10  | 19/10     |
| [[file:assignments/java-bootstrap.org][Java bootstrap exercises]]      | 22/10 | 26/10     |
| [[file:assignments/assignment3.org][Assignment 3 (Java)]]           | 29/10 | 16/11     |
| [[file:assignments/assignment4.org][Assignment 4 (Java)]]           | 19/11 | 30/11     |
| [[file:projects/projects.org][Project assignment -- Phase 3]] | 3/12  | 14/1 2019 |
* The Coding Exam
The course does not use a traditional closed-book exam. Read [[file:code-exam.org][this
page]] for more information about he coding exam.
* The SIMPLE Methodology
The [[file:simple.org][SIMPLE methodology]] is an attempt at codifying some good
practises for thinking about coding, actual coding, and
refactoring. Read about in on [[file:simple.org][this page]].
* Resources
** TODO General 
- An introduction to Emacs is found [[file:editors.org][here]]
- An introduction to Makefiles is found [[file:makefiles.org][here]]
- An overview of the tools we use on the course is found [[file:tools.org][here]]
- A minimal set of commands for working with git and GitHub is found [[file:github.org][here]]
- An IOOPM-specific [[https://trello.com/ioopm][clonable Trello board]] that you can use to track your own progress and plan your phases and sprints
- An IOOPM-specific [[https://docs.google.com/spreadsheets/d/171ME0XXa-7C7iSbRsHuwdwDwt912nGqHwdpuHQAhIVc/edit#gid=49659760][Google Spread Sheet for making burndown charts]] and tracking your velocity
- [[http://www.it.uu.se/datordrift/maskinpark/linux][Machines at IT available for remote access]] and [[http://www.it.uu.se/datordrift/maskinpark/linux][instructions for accessing them remotely]]
** TODO C Programming
- [[file:compiling.org][Basic compiling]] instructions
- [[file:basic-c.org][Basic C constructs]] overview and discussion
- [[file:pointers.org][An introduction to pointers and pointers to pointers]]
** TODO Java Programming
- [[file:compiling.org][Basic compiling]] instructions
** Screencasts
Screencasts from old instances of the course are [[file:screencasts.org][available]].
** FAQ
A minimal FAQ is [[file:about.org][available]]. 
** TODO Links
- [[http://wrigstad.com/ioopm][Old website for IOOPM 2015--2017]]
- [[http://wrigstad.com/ioopm/links.php][The old link library]]

* Contact Information
| Name             | Function                | Email                       | Office |
|------------------+-------------------------+-----------------------------+--------|
| [[http://wrigstad.com][Tobias Wrigstad]]  | Head Teacher            | =tobias.wrigstad@it.uu.se=  |   1356 |
| Gustaf Borgström | Head Teaching Assistant | =gustaf.borgstrom@it.uu.se= |   1258 |

** How do I contact you?

- Talk to us during lectures and labs :: 
     See the [[https://cloud.timeedit.net/uu/web/schema/ri1875ZQ0QYZ01Q0wo7YwcQ25y6QZ6XfYxZ020g.html][schedule]] for details. 
- Use [[https://piazza.com/class/jkd32onglxi2vb][Piazza]] :: 
     For questions that are not sensitive, consdier asking a [[public][public question]] (/Entire Class/)
     rather than a [[private][private question]] (/Individual Student(s) / Instructor(s)/). Most questions are of interest to many students,
     and often, many other students chip in to try and untangle some issue, 
     which is good for everyone.
- Come by our offices :: 
     Tobias is not in most Tuesdays, but otherwise he should be around unless he is not lecturing or labbing on IOOPM. 
- Send us an email ::
     This should be the last resort, really. Please use your student email so that we
     have an easier time knowing who we are talking to. 
- NEVER call or text :: 
     Really, don't do that!

** How do I ask a public question on Piazza? <<public>>
1. Start by searching the Piazza site using the search dialogue at top left. If the question has already been answered, you’re done. If the answer is not quite what you’re looking for, use the "follow up discussions" below the existing question to create a follow up.
2. If the above is not successful, use the search feature on this page (check the menu). 
3. If the above is not successful, time to use Piazza!
   Create a new question by pressing the “New Post” button at top right.
   You should post to "Entire class" unless there is a strong reason to make your question private.
   You may make your post anonymous, but only do so if you are particularly uncomfortable revealing your identity. 

** How do I ask a private question on Piazza? <<private>>

Follow the steps above for a public question, but select
"Individual Student(s) / Instructor(s)", rather than "Entire
class". Type the name of the person you want to contact. Tutors
names are listed here.


* Recent Changes

#+begin_attention
When the course starts, substantial changes (i.e., not spelling
errors) will be logged here. More complete change tracking is
possible by following [[https://github.com/IOOPM-UU/course-web][these pages on GitHub]]. 
#+end_attention

#+include: "./footer.org"


# Local Variables:
# eval: (progn (find-file "publish.el") (eval-buffer "publish.el"))
# End:
